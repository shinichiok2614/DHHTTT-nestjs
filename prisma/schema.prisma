// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  //bảng này quy định quyền của các loại admin
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique //unique: không trùng nhau
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  //trường này quy định user này áp dụng quyền nào đc quy định trong bảng admin
  idAdmin        Int?
  persons        Person[]
  Admin          Admin?   @relation(fields: [idAdmin], references: [id])

  @@index([idAdmin], name: "id_admin_user")
  @@map("users") //tên bảng csdl thật
}

model Person {
  id             Int      @id @default(autoincrement())
  firstName      String?
  lastName       String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  // notes           Note[]
  level          Int?
  // idPermission    Int?
  phone          String?
  dateofbirth    String?
  address        String?
  degree         String?
  acedemicrank   String?
  armyrank       String?
  profilepicture String?
  bio            String?
  languages      String?
  gender         String?
  idDonVi        Int?
  idUser         Int?

  nhiemvus NhiemVu[]

  DonVi DonVi? @relation(fields: [idDonVi], references: [id])

  // @@map("users") //tên bảng csdl thật
  User User? @relation(fields: [idUser], references: [id])

  @@index([idDonVi], name: "id_don_vi_person")
  @@index([idUser], name: "id_user_person")
}

model BaiDang {
  id          Int        @id @default(autoincrement())
  tenBaiDang  String
  idChuDe     Int?
  idBaoCao    Int?
  idDonVi     Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  ChuDe       ChuDe?     @relation(fields: [idChuDe], references: [id])
  BaoCao      BaoCao?    @relation(fields: [idBaoCao], references: [id])
  DonVi       DonVi?     @relation(fields: [idDonVi], references: [id])
  TinhTrang   TinhTrang? @relation(fields: [tinhTrangId], references: [id])
  tinhTrangId Int?

  @@index([idChuDe], name: "id_chu_de_baidang")
  @@index([idBaoCao], name: "id_bao_cao")
  @@index([idDonVi], name: "id_don_vi_baidang")
}

// Define the BaoCao model
model BaoCao {
  id          Int        @id @default(autoincrement())
  name        String
  idNhiemVu   Int?
  idTinhTrang Int?
  // idDonVi   Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  NhiemVu     NhiemVu?   @relation(fields: [idNhiemVu], references: [id])
  baidangs    BaiDang[]
  TinhTrang   TinhTrang? @relation(fields: [idTinhTrang], references: [id])

  @@index([idNhiemVu], name: "id_nhiem_vu")
  @@index([idTinhTrang], name: "id_tinh_trang_baocao")
}

model ChuDeNhan {
  id        Int      @id @default(autoincrement())
  idNhiemVu Int
  idChuDe   Int
  NhiemVu   NhiemVu? @relation(fields: [idNhiemVu], references: [id])
  ChuDe     ChuDe?   @relation(fields: [idChuDe], references: [id])
}

model ChuDe {
  id        Int         @id @default(autoincrement())
  name      String
  baidangs  BaiDang[]
  NhiemVu   NhiemVu[]
  ChuDeNhan ChuDeNhan[]
}

model DonViNhan {
  id        Int      @id @default(autoincrement())
  idNhiemVu Int
  idDonVi   Int
  DonVi     DonVi?   @relation(fields: [idDonVi], references: [id])
  NhiemVu   NhiemVu? @relation(fields: [idNhiemVu], references: [id])
}

model DonVi {
  id        Int         @id @default(autoincrement())
  name      String
  persons   Person[]
  baidangs  BaiDang[]
  DonViNhan DonViNhan[]
}

model NhiemVu {
  id          Int         @id @default(autoincrement())
  tenNhiemVu  String
  idNoiDung   Int?
  idNguoiGiao Int?
  ngayGiao    DateTime?
  thoiHan     DateTime?
  loaiTin     String?
  idTinhTrang Int?
  idChuDe     Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  NoiDung     NoiDung?    @relation(fields: [idNoiDung], references: [id])
  Person      Person?     @relation(fields: [idNguoiGiao], references: [id])
  TinhTrang   TinhTrang?  @relation(fields: [idTinhTrang], references: [id])
  baocaos     BaoCao[]
  DonViNhan   DonViNhan[]
  ChuDe       ChuDe[]
  ChuDeNhan   ChuDeNhan[]

  @@index([idNoiDung], name: "id_noi_dung")
  @@index([idNguoiGiao], name: "id_nguoi_giao")
  @@index([idTinhTrang], name: "id_tinh_trang_nhiemvu")
}

model NoiDung {
  id         Int       @id @default(autoincrement())
  tenBaiDang String?
  soLuong    Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  nhiemvus   NhiemVu[]
}

model TinhTrang {
  id        Int       @id @default(autoincrement())
  daNhan    Boolean?
  dangXuLy  Boolean?
  hoanThanh Boolean?
  nhiemvus  NhiemVu[]
  baocaos   BaoCao[]
  baidangs  BaiDang[]
}
