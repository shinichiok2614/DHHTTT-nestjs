// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{ //tên thực thể
  id              Int @id @default(autoincrement())
  email           String @unique //unique: không trùng nhau
  hashedPassword  String
  firstName       String?
  lastName        String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  notes           Note[]

  @@map("users") //tên bảng csdl thật
}
model Note{
  id              Int @id @default(autoincrement())
  title           String
  description     String
  url             String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          Int
  user User @relation(fields: [userId], references: [id])
  @@map("notes")
}
model BaiDang {
  id         Int      @id @default(autoincrement())
  tenBaiDang String
  idChuDe    Int?
  idBaoCao   Int?
  ChuDe      ChuDe?   @relation(fields: [idChuDe], references: [id])
  BaoCao     BaoCao?  @relation(fields: [idBaoCao], references: [id])
  @@index([idChuDe], name: "id_chu_de")
  @@index([idBaoCao], name: "id_bao_cao")
}
// Define the BaoCao model
model BaoCao {
  id         Int      @id @default(autoincrement())
  name       String
  idNhiemVu  Int?
  idDonVi    Int?
  NhiemVu    NhiemVu?   @relation(fields: [idNhiemVu], references: [id])
  DonVi      DonVi?     @relation(fields: [idDonVi], references: [id])
  baidangs   BaiDang[]
  @@index([idNhiemVu], name: "id_nhiem_vu")
  @@index([idDonVi], name: "id_don_vi")
}

// Define the ChuDe model
model ChuDe {
  id          Int    @id @default(autoincrement())
  name        String
  baidangs    BaiDang[]
}

// Define the DonVi model
model DonVi {
  id          Int    @id @default(autoincrement())
  name        String?
  baocaos     BaoCao[]
}

// Define the NhiemVu model
model NhiemVu {
  id           Int      @id @default(autoincrement())
  tenNhiemVu   String
  idNoiDung    Int?
  idNguoiGiao  Int?
  ngayGiao     DateTime?
  thoiHan      DateTime?
  loaiTin      String?
  idTinhTrang  Int?
  NoiDung      NoiDung?     @relation(fields: [idNoiDung], references: [id])
  Person       Person?      @relation(fields: [idNguoiGiao], references: [id])
  TinhTrang    TinhTrang?   @relation(fields: [idTinhTrang], references: [id])
  baocaos      BaoCao[]
  @@index([idNoiDung], name: "id_noi_dung")
  @@index([idNguoiGiao], name: "id_nguoi_giao")
  @@index([idTinhTrang], name: "id_tinh_trang")
}
// Define the NoiDung model
model NoiDung {
  id          Int    @id @default(autoincrement())
  tenBaiDang  String?
  soLuong     Int?
  nhiemvus    NhiemVu[]
}
model TinhTrang {
  id          Int     @id @default(autoincrement())
  daNhan      Boolean?
  dangXuLy    Boolean?
  hoanThanh   Boolean?
  nhiemvus    NhiemVu[]
}
// Define the Person model
model Person {
  id              Int      @id @default(autoincrement())
  firstname       String?
  lastname        String?
  username        String?
  password        String?
  level           Int
  idPermission    Int?
  phone           String?
  email           String?
  dateofbirth     String?
  address         String?
  degree          String?
  acedemicrank    String?
  armyrank        String?
  profilepicture  String?
  Permission      Permission? @relation(fields: [idPermission], references: [id])
  nhiemvus        NhiemVu[]
}
model Permission {
  id            Int    @id @default(autoincrement())
  name          String?
  giaoNhiemVu   Boolean?
  baoCao        Boolean?
  thongKe       Boolean?
  persons       Person[]
}

